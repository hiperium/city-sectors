AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'SAM Template for Cities module.'

Parameters:
  ResourceDeletionPolicy:
    Type: String
    Default: 'Delete'
    AllowedValues:
      - Retain
      - Delete
    Description: 'Deletion policy for table/log resources. For Snapshot, you need to create a manual backup before deleting the stack to preserve the data.'

  LogRetentionInDays:
    Type: Number
    Default: 7
    AllowedValues:
      - 7
      - 14
      - 30
    Description: 'Log retention in days for the functions.'

  AnomalyDetectorEvaluationFrequency:
    Type: String
    Default: 'ONE_HOUR'
    AllowedValues:
      - FIVE_MIN
      - TEN_MIN
      - FIFTEEN_MIN
      - THIRTY_MIN
      - ONE_HOUR
    Description: 'Anomaly detector evaluation frequency in minutes.'

  CityTableName:
    Type: String
    Default: 'City'
    Description: 'City table name.'

  SpringProfile:
    Type: String
    Default: 'dev'
    AllowedValues:
      - dev
      - qa
      - load
      - preview
      - prod
    Description: 'Spring profile for the functions.'

Globals:
  Function:
    Timeout: 10     # seconds
    MemorySize: 512 # MB
    Runtime: provided.al2023
    Architectures:
      - arm64

Resources:
  CityTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref CityTableName
      AttributeDefinitions:
        - AttributeName: 'pk'
          AttributeType: S
        - AttributeName: 'sk'
          AttributeType: S
      KeySchema:
        - AttributeName: 'pk'
          KeyType: HASH
        - AttributeName: 'sk'
          KeyType: RANGE
      BillingMode: PROVISIONED
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      SSESpecification:
        SSEEnabled: true
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
    UpdateReplacePolicy: Retain
    DeletionPolicy: !Ref ResourceDeletionPolicy

  ReadFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AWS::StackName}/CityReadFunction"
      RetentionInDays: !Ref LogRetentionInDays
    UpdateReplacePolicy: Retain
    DeletionPolicy: !Ref ResourceDeletionPolicy

  ReadFunctionDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: 'city-read-function-dlq'
      VisibilityTimeout: 300            # 5 minutes
      MaximumMessageSize: 262144        # 256 KB
      MessageRetentionPeriod: 1209600   # 14 days
      ReceiveMessageWaitTimeSeconds: 20
    UpdateReplacePolicy: Retain
    DeletionPolicy: !Ref ResourceDeletionPolicy

  ReadFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./city-read-function
      FunctionName: 'city-read-function'
      Description: 'Read city data function.'
      Handler: 'org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest'
      LoggingConfig:
        LogGroup: !Ref ReadFunctionLogGroup
      DeadLetterQueue:
        Type: SQS
        TargetArn: !GetAtt ReadFunctionDLQ.Arn
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref CityTable
      Environment:
        Variables:
          CITY_TABLE: !Ref CityTable
          SPRING_PROFILES_ACTIVE: !Ref SpringProfile
    Metadata:
      BuildMethod: makefile

  ReadFunctionLogAnomalyDetector:
    Type: AWS::Logs::LogAnomalyDetector
    Properties:
      LogGroupArnList:
        - !GetAtt ReadFunctionLogGroup.Arn
      EvaluationFrequency: !Ref AnomalyDetectorEvaluationFrequency
      AnomalyVisibilityTime: 7 # days

Outputs:
  CitiesTableArn:
    Description: "Cities DynamoDB table ARN."
    Value: !GetAtt CityTable.Arn

  ReadFunctionArn:
    Description: "Read City Function ARN."
    Value: !GetAtt ReadFunction.Arn

  ReadFunctionIamRole:
    Description: "Implicit IAM Role created for the Read function"
    Value: !GetAtt ReadFunctionRole.Arn
